import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e}from"./app-7ef28451.js";const t="/assets/1-43be90eb.png",o="/assets/2-19b1b587.png",c="/assets/3-05afeaf5.png",i="/assets/4-bbdfb840.png",p={},l=e(`<h1 id="微信小游戏js交互方式" tabindex="-1"><a class="header-anchor" href="#微信小游戏js交互方式" aria-hidden="true">#</a> 微信小游戏JS交互方式：</h1><blockquote><p>微信小游戏机制问题，在微信小游戏中不会加载index.html，所以写在index.html的函数均不会被调用到</p></blockquote><p>1.自行创建<code>calljs.js</code>文件中添加定义，<strong>每次编译该文件都会被覆盖</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> CallJS<span class="token operator">=</span><span class="token punctuation">{</span>
  <span class="token function-variable function">test</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.在<code>game.js</code>中引入</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;./weapp-adapter&#39;</span>
<span class="token keyword">import</span> unityNamespace <span class="token keyword">from</span> <span class="token string">&#39;./unity-namespace&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./webgl.wasm.framework.unityweb&#39;</span>
<span class="token keyword">import</span> <span class="token string">&quot;./unity-sdk/index.js&quot;</span>
<span class="token keyword">import</span> checkVersion<span class="token punctuation">,</span> <span class="token punctuation">{</span>canUseCoverview<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./check-version&#39;</span>
<span class="token keyword">import</span> <span class="token string">&quot;texture-config.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>launchEventType<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./plugin-config&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>CallJS<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./calljs&#39;</span> <span class="token comment">// 引入自定义JS调用代码</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>挂载到<code>GameGlobal</code>对象上，第32行下</p><div class="language-JavaScript line-numbers-mode" data-ext="JavaScript"><pre class="language-JavaScript"><code>GameGlobal.managerConfig = managerConfig;
GameGlobal.CallJS = CallJS; // 挂载
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>3.调用案例，小游戏侧无需实现，在Unity的胶水层定义</p><blockquote><p>Unity自定义的胶水层代码会被编译到<code>webgl.wasm.framework.unityweb.js</code>中</p></blockquote><figure><img src="`+t+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点击按钮，在Unity中通过胶水层调用<code>_Buy</code>函数</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="webgl的js交互方式" tabindex="-1"><a class="header-anchor" href="#webgl的js交互方式" aria-hidden="true">#</a> WebGL的JS交互方式：</h1><p>1.使用和微信小游戏中同样的引入方式，自行定义<code>GameGlobal</code>并挂载<code>CallJS</code>对象，保持和小游戏中相同的定义方式。在胶水层统一调用，不再做区分处理。</p><p><img src="'+c+'" alt="" loading="lazy"><img src="'+i+'" alt="" loading="lazy"></p><h1 id="calljs更新方式建议" tabindex="-1"><a class="header-anchor" href="#calljs更新方式建议" aria-hidden="true">#</a> calljs更新方式建议：</h1><p>建议在unity中将calljs做模板处理，不需要每次都修改index.html和game.js。只需要替换calljs.js文件即可。 WebGL模板修改<code>WXTemplate</code>或<code>WXTemplate2020</code> 小游戏模板修改<code>WX-WASM-SDK\\wechat-default</code></p>',18),r=[l];function d(u,k){return s(),a("div",null,r)}const v=n(p,[["render",d],["__file","index.html.vue"]]);export{v as default};
