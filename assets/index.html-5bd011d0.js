const e=JSON.parse('{"key":"v-79d9f89f","path":"/posts/%E7%AE%97%E6%B3%95/DDA%E7%94%BB%E7%BA%BF%E7%AE%97%E6%B3%95%E5%8F%8A%E5%9C%A8PyOpenGL%E4%B8%8A%E7%9A%84%E5%AE%9E%E7%8E%B0/","title":"DDA画线算法及在PyOpenGL上的实现","lang":"zh-CN","frontmatter":{"title":"DDA画线算法及在PyOpenGL上的实现","date":"2022-01-10T10:48:12.000Z","categorie":["算法"],"description":"DDA画线算法 DDA画线算法也叫数值微分算法。其算法原理如下： 算法原理 DDA算法的基础就是初中数学中的斜截式方程y=kx+b。 斜率k=Δy/Δx,Δy=y2-y1,Δx=x2-x1。所以k=(y2-y1)/(x2-x1)。这也是斜截式方程的特点。知道坐标系内的任意两点就能求其一元二次方程。 因此，给出一个起点和终点就能画出一条线。 算法优化 一元二次方程y=kx+b，可以看出其中用了一个乘法。对于画线算法来说，如果用此方程直接画线，那么每画一个像素点都要计算一个乘法。而在加减乘除中乘法运算的效率是比较慢的，所以直接使用斜截式方程画线的效率太低。要把其中的乘法运算转换成加法运算，因为加法运算是最快的。","head":[["meta",{"property":"og:url","content":"https://alanweekend.github.io/posts/%E7%AE%97%E6%B3%95/DDA%E7%94%BB%E7%BA%BF%E7%AE%97%E6%B3%95%E5%8F%8A%E5%9C%A8PyOpenGL%E4%B8%8A%E7%9A%84%E5%AE%9E%E7%8E%B0/"}],["meta",{"property":"og:site_name","content":"Gaming & Coding"}],["meta",{"property":"og:title","content":"DDA画线算法及在PyOpenGL上的实现"}],["meta",{"property":"og:description","content":"DDA画线算法 DDA画线算法也叫数值微分算法。其算法原理如下： 算法原理 DDA算法的基础就是初中数学中的斜截式方程y=kx+b。 斜率k=Δy/Δx,Δy=y2-y1,Δx=x2-x1。所以k=(y2-y1)/(x2-x1)。这也是斜截式方程的特点。知道坐标系内的任意两点就能求其一元二次方程。 因此，给出一个起点和终点就能画出一条线。 算法优化 一元二次方程y=kx+b，可以看出其中用了一个乘法。对于画线算法来说，如果用此方程直接画线，那么每画一个像素点都要计算一个乘法。而在加减乘除中乘法运算的效率是比较慢的，所以直接使用斜截式方程画线的效率太低。要把其中的乘法运算转换成加法运算，因为加法运算是最快的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://alanweekend.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-30T07:00:52.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"DDA画线算法及在PyOpenGL上的实现"}],["meta",{"property":"article:author","content":"Weekend"}],["meta",{"property":"article:published_time","content":"2022-01-10T10:48:12.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-30T07:00:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DDA画线算法及在PyOpenGL上的实现\\",\\"image\\":[\\"https://alanweekend.github.io/\\"],\\"datePublished\\":\\"2022-01-10T10:48:12.000Z\\",\\"dateModified\\":\\"2023-05-30T07:00:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Weekend\\",\\"url\\":\\"https://alanweekend.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"DDA画线算法","slug":"dda画线算法","link":"#dda画线算法","children":[{"level":3,"title":"算法原理","slug":"算法原理","link":"#算法原理","children":[]}]},{"level":2,"title":"算法优化","slug":"算法优化","link":"#算法优化","children":[{"level":3,"title":"增量思想","slug":"增量思想","link":"#增量思想","children":[]},{"level":3,"title":"斜率转换","slug":"斜率转换","link":"#斜率转换","children":[]}]}],"git":{"createdTime":1685430052000,"updatedTime":1685430052000,"contributors":[{"name":"Weekend","email":"872285171@qq.com","commits":1}]},"readingTime":{"minutes":2.34,"words":703},"filePathRelative":"posts/算法/DDA画线算法及在PyOpenGL上的实现/index.md","localizedDate":"2022年1月10日","excerpt":"<h2> DDA画线算法</h2>\\n<p>DDA画线算法也叫数值微分算法。其算法原理如下：</p>\\n<h3> 算法原理</h3>\\n<p>DDA算法的基础就是初中数学中的斜截式方程y=kx+b。\\n斜率k=Δy/Δx,Δy=y2-y1,Δx=x2-x1。所以k=(y2-y1)/(x2-x1)。这也是斜截式方程的特点。知道坐标系内的任意两点就能求其一元二次方程。\\n因此，给出一个起点和终点就能画出一条线。</p>\\n<h2> 算法优化</h2>\\n<p>一元二次方程y=kx+b，可以看出其中用了一个乘法。对于画线算法来说，如果用此方程直接画线，那么每画一个像素点都要计算一个乘法。而在加减乘除中乘法运算的效率是比较慢的，所以直接使用斜截式方程画线的效率太低。要把其中的乘法运算转换成加法运算，因为加法运算是最快的。</p>","copyright":{"author":"Weekend","license":"MIT"},"autoDesc":true}');export{e as data};
