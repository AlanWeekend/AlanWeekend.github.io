import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as e,c as o,a as s,b as n,d as c,e as i}from"./app-3234381a.js";const l={},u=s("h1",{id:"将bdframework本地化",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#将bdframework本地化","aria-hidden":"true"},"#"),n(" 将BDFramework本地化")],-1),k={href:"https://github.com/yimengfan/BDFramework.Core/releases",target:"_blank",rel:"noopener noreferrer"},d=s("code",null,"Packages",-1),r=i(`<h1 id="适配windows" tabindex="-1"><a class="header-anchor" href="#适配windows" aria-hidden="true">#</a> 适配Windows</h1><h2 id="修改支持windows打包" tabindex="-1"><a class="header-anchor" href="#修改支持windows打包" aria-hidden="true">#</a> 修改支持Windows打包</h2><ol><li>修改<code>Packages/BDFramework/Editor/EditorPiepeline/PublishPipeline/EditroWindow_PublishAssets.cs</code>的<code>OnGUI_OneKeyExprot()</code>方法，添加Windows打包支持，内容如下</li></ol><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 一键导出</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnGUI_OneKeyExprot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    GUILayout<span class="token punctuation">.</span><span class="token function">BeginVertical</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">{</span>
        GUILayout<span class="token punctuation">.</span><span class="token function">Label</span><span class="token punctuation">(</span><span class="token string">&quot;注:上面按钮操作,会默认生成到DevOps&quot;</span><span class="token punctuation">,</span> GUILayout<span class="token punctuation">.</span><span class="token function">Width</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span> GUILayout<span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        isGenWindowsAssets <span class="token operator">=</span> GUILayout<span class="token punctuation">.</span><span class="token function">Toggle</span><span class="token punctuation">(</span>isGenWindowsAssets<span class="token punctuation">,</span> <span class="token string">&quot;生成Windows资源&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 修改，isGenWindowsAssets变量自行添加定义</span>
        isGenAndroidAssets <span class="token operator">=</span> GUILayout<span class="token punctuation">.</span><span class="token function">Toggle</span><span class="token punctuation">(</span>isGenAndroidAssets<span class="token punctuation">,</span> <span class="token string">&quot;生成Android资源(Windows共用)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        isGenIOSAssets <span class="token operator">=</span> GUILayout<span class="token punctuation">.</span><span class="token function">Toggle</span><span class="token punctuation">(</span>isGenIOSAssets<span class="token punctuation">,</span> <span class="token string">&quot;生成Ios资源&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//</span>
        GUILayout<span class="token punctuation">.</span><span class="token function">Label</span><span class="token punctuation">(</span><span class="token string">&quot;导出地址:&quot;</span> <span class="token operator">+</span> exportPath<span class="token punctuation">,</span> GUILayout<span class="token punctuation">.</span><span class="token function">Width</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>GUILayout<span class="token punctuation">.</span><span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&quot;一键导出&quot;</span><span class="token punctuation">,</span> GUILayout<span class="token punctuation">.</span><span class="token function">Width</span><span class="token punctuation">(</span><span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">,</span> GUILayout<span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isBuilding<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            isBuilding <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

            <span class="token comment">//选择目录</span>
            exportPath <span class="token operator">=</span> BDApplication<span class="token punctuation">.</span>DevOpsPublishAssetsPath<span class="token punctuation">;</span>

            <span class="token comment">//生成windows资源 // 修改</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isGenWindowsAssets<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token function">GenAllAssets</span><span class="token punctuation">(</span>exportPath<span class="token punctuation">,</span> RuntimePlatform<span class="token punctuation">.</span>WindowsPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">//生成android资源</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isGenAndroidAssets<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token function">GenAllAssets</span><span class="token punctuation">(</span>exportPath<span class="token punctuation">,</span> RuntimePlatform<span class="token punctuation">.</span>Android<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">//生成ios资源</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isGenIOSAssets<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token function">GenAllAssets</span><span class="token punctuation">(</span>exportPath<span class="token punctuation">,</span> RuntimePlatform<span class="token punctuation">.</span>IPhonePlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">//EditorUtility.DisplayDialog(&quot;提示&quot;, &quot;资源导出完成&quot;, &quot;OK&quot;);</span>

            isBuilding <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>GUILayout<span class="token punctuation">.</span><span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&quot;热更资源转hash(生成服务器配置)&quot;</span><span class="token punctuation">,</span> GUILayout<span class="token punctuation">.</span><span class="token function">Width</span><span class="token punctuation">(</span><span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">,</span> GUILayout<span class="token punctuation">.</span><span class="token function">Height</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//自动转hash</span>
            PublishPipelineTools<span class="token punctuation">.</span><span class="token function">PublishAssetsToServer</span><span class="token punctuation">(</span>BDApplication<span class="token punctuation">.</span>DevOpsPublishAssetsPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    GUILayout<span class="token punctuation">.</span><span class="token function">EndVertical</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>修改<code>Packages\\BDFramework\\Runtime\\Tools\\BDApplication.cs</code>中的<code>GetPlatformPath()</code>方法，修改内容如下</li></ol><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 平台资源的父路径</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">GetPlatformPath</span><span class="token punctuation">(</span><span class="token class-name">RuntimePlatform</span> platform<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>platform<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">case</span> RuntimePlatform<span class="token punctuation">.</span>WindowsEditor<span class="token punctuation">:</span>
        <span class="token keyword">case</span> RuntimePlatform<span class="token punctuation">.</span>WindowsPlayer<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token string">&quot;Windows&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 修改</span>
        <span class="token keyword">case</span> RuntimePlatform<span class="token punctuation">.</span>Android<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token string">&quot;Android&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> RuntimePlatform<span class="token punctuation">.</span>OSXEditor<span class="token punctuation">:</span>
        <span class="token keyword">case</span> RuntimePlatform<span class="token punctuation">.</span>OSXPlayer<span class="token punctuation">:</span>
        <span class="token keyword">case</span> RuntimePlatform<span class="token punctuation">.</span>IPhonePlayer<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token string">&quot;iOS&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="去掉sqlite" tabindex="-1"><a class="header-anchor" href="#去掉sqlite" aria-hidden="true">#</a> 去掉Sqlite</h2><p>项目不使用sqlite，且平台为x86，框架只有x64的sqlite依赖，会导致报错无法正常启动</p><ol><li>修改<code>Packages\\BDFramework\\Runtime\\BDLauncher.cs</code>中的<code>Launch()</code>方法，修改内容如下</li></ol><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 初始化</span>
<span class="token doc-comment comment">/// 修改版本,让这个启动逻辑由使用者自行处理</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mainProjectTypes<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Editor模式下,UPM隔离了DLL需要手动传入<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>GameId<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>单游戏更新启动不需要id，多游戏更新需要id号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Launch</span><span class="token punctuation">(</span><span class="token class-name">Type<span class="token punctuation">[</span><span class="token punctuation">]</span></span> mainProjectTypes<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> clrBindingAction<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> gameId <span class="token operator">=</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    BDebug<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token string">&quot;【Launch】Persistent:&quot;</span> <span class="token operator">+</span> Application<span class="token punctuation">.</span>persistentDataPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    BDebug<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token string">&quot;【Launch】StreamingAsset:&quot;</span> <span class="token operator">+</span> Application<span class="token punctuation">.</span>streamingAssetsPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//主工程启动</span>
    <span class="token class-name">IGameStart</span> mainStart<span class="token punctuation">;</span>
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> type <span class="token keyword">in</span> mainProjectTypes<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//TODO 这里有可能先访问到 IGamestart的Adaptor</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>type<span class="token punctuation">.</span>IsClass <span class="token operator">&amp;&amp;</span> type<span class="token punctuation">.</span><span class="token function">GetInterface</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>IGameStart<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            BDebug<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token string">&quot;【Launch】主工程Start! &quot;</span> <span class="token operator">+</span> type<span class="token punctuation">.</span>FullName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mainStart <span class="token operator">=</span> Activator<span class="token punctuation">.</span><span class="token function">CreateInstance</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">IGameStart</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mainStart <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">//注册</span>
                mainStart<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                OnUpdate <span class="token operator">+=</span> mainStart<span class="token punctuation">.</span>Update<span class="token punctuation">;</span>
                OnLateUpdate <span class="token operator">+=</span> mainStart<span class="token punctuation">.</span>LateUpdate<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    BDebug<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token string">&quot;【Launch】框架资源版本验证!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//开始资源检测</span>
    GameAssetHelper<span class="token punctuation">.</span><span class="token function">CheckAssetPackageVersion</span><span class="token punctuation">(</span>Application<span class="token punctuation">.</span>platform<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//1.美术目录</span>
        BResources<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>GameConfig<span class="token punctuation">.</span>ArtRoot<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2.sql</span>
        <span class="token comment">//SqliteLoder.Load(GameConfig.SQLRoot); // 修改</span>
        <span class="token comment">//3.脚本,这个启动会开启所有的逻辑</span>
        ScriptLoder<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span>GameConfig<span class="token punctuation">.</span>CodeRoot<span class="token punctuation">,</span> GameConfig<span class="token punctuation">.</span>CodeRunMode<span class="token punctuation">,</span> mainProjectTypes<span class="token punctuation">,</span> clrBindingAction<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function m(v,b){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,s("p",null,[n("不要通过unpm安装框架，在框架"),s("a",k,[n("发布页"),c(a)]),n("下载包文件，放在项目的"),d,n("目录中。")]),r])}const f=t(l,[["render",m],["__file","index.html.vue"]]);export{f as default};
